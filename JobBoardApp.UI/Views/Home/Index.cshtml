@model IEnumerable<JobListingDTO>

@{
    ViewData["Title"] = "Job Listings";
    // Sorting: Active listings at the top, inactive at the bottom
    var sortedJobs = Model.OrderByDescending(job => job.IsActive).ToList();
}

<div class="container py-5">
    <h2 class="text-center mb-5">Available Job Listings</h2>

    <!-- Search Input -->
    <div class="row justify-content-center mb-4">
        <div class="col-md-8">
            <input type="text" id="jobSearchInput" class="form-control" placeholder="Search job listings..." />
        </div>
    </div>

    <!-- Job Listings -->
    <div class="row justify-content-center" id="jobListingsContainer">
        <div id="noResultsMessage" style="display: none;" class="text-center text-muted">
            <p>No Matching Job Listing Found</p>
        </div>
        @foreach (var job in sortedJobs)
        {
            <div class="col-md-6 mb-4 job-listing"
                 data-title="@job.Title"
                 data-description="@job.Description"
                 data-location="@job.Location"
                 data-salary="@job.SalaryRange.ToString()"
                 data-jobtype="@job.JobType.ToString()">
                <!-- Job Listing Card with Blur Effect for inactive jobs -->
                <div class="card shadow-lg border-0 job-listing-card @(!job.IsActive ? "inactive-job" : "")">
                    <div class="card-body p-4">
                        <!-- Job Title -->
                        <h4 class="card-title text-primary">@job.Title</h4>

                        <!-- Employer Name & Posted Date -->
                        <div class="d-flex justify-content-between mb-3">
                            <span class="text-muted"><i class="bi bi-building"></i> @job.EmployerName</span>
                            <span class="text-muted"><i class="bi bi-calendar"></i> Posted: @job.PostedDate.ToShortDateString()</span>
                        </div>

                        <!-- Job Description -->
                        <p class="card-text mb-2">
                            @if (job.Description.Length > 100)
                            {
                                @(job.Description.Substring(0, 100) + "...")
                            }
                            else
                            {
                                @job.Description
                            }
                        </p>

                        <!-- Job Location, Salary, and Job Type -->
                        <div class="mb-3">
                            <span class="badge bg-info text-dark"><i class="bi bi-geo-alt"></i> @job.Location</span>
                            <span class="badge bg-success"><i class="bi bi-currency-dollar"></i> @job.SalaryRange.ToString("C")</span>
                            <span class="badge bg-warning text-dark"><i class="bi bi-briefcase"></i> @job.JobType</span>
                        </div>

                        <!-- Action Button -->
                        <div class="text-center mt-3">
                            <a asp-action="JobListingDetails" asp-route-jobListingId="@job.Id" class="btn btn-primary px-4">
                                <i class="bi bi-info-circle"></i> View Details
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Include JavaScript for real-time search -->
@section Scripts {
    <script src="~/js/RealTimeSearch.js"></script>
}
